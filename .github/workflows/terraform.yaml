name: Deploy using Terraform

on:
  push:
    branches:
      - develop

env:
  terraform_version: 1.3.3
  terraform_backend_file: backend.tfvars
  terraform_provider_file: provider.tfvars
  terraform_plan_file: plan.tfplan
  terraform_workdir: infra-as-code/terraform

jobs:
  deploy:
    name: Deploy infrastructure using Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.terraform_workdir }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Retrieve the secret and decode it to a file
        env:
          terraform_backend_tfvars: ${{ secrets.terraform_backend_tfvars }}
          terraform_provider_tfvars: ${{ secrets.terraform_provider_tfvars }}
        run: |
          echo $terraform_backend_tfvars | base64 --decode > $terraform_backend_file
          echo $terraform_provider_tfvars | base64 --decode > $terraform_provider_file

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -input=false \
            -backend-config=$terraform_backend_file

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -input=false \
            -out=$terraform_plan_file \
            -var-file=$terraform_provider_file \
            -no-color

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply \
            -input=false \
            -var-file=$terraform_provider_file \
            -auto-approve \
            -no-color \
            $terraform_plan_file
